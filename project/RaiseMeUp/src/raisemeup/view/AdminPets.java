/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package raisemeup.view;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import raisemeup.control.RaiseMeUp;
import raisemeup.model.beans.Food;
import raisemeup.model.beans.Item;
import raisemeup.model.beans.Pet;
import raisemeup.model.beans.PetBuilder;
import raisemeup.model.beans.Upgrade;
import raisemeup.model.beans.User;

/**
 *
 * @author lekogabor
 */
public class AdminPets extends javax.swing.JFrame {

    
    private Map<Integer,Pet> pets = new HashMap<Integer, Pet>();
    /**
     * Creates new form AdminPets
     */
    public AdminPets() {
        initComponents();
        myInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        texType = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        texName = new javax.swing.JTextField();
        texVariant = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        butUpdate = new javax.swing.JButton();
        butRemovePet = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePets = new javax.swing.JTable();
        texHunger = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        texFun = new javax.swing.JTextField();
        texEnergy = new javax.swing.JTextField();
        texHygiene = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        texMoney = new javax.swing.JTextField();
        texAge = new javax.swing.JTextField();
        butListPetsItem = new javax.swing.JButton();
        butBack = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        texOwner = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        texImage = new javax.swing.JTextField();
        butListPetsJobs = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        texType.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        texType.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel3.setText("Name");

        jLabel2.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel2.setText("Variant");

        texName.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        texName.setEnabled(false);

        texVariant.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        texVariant.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel1.setText("Type");

        butUpdate.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        butUpdate.setText("Update");
        butUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butUpdateActionPerformed(evt);
            }
        });

        butRemovePet.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        butRemovePet.setText("Remove");
        butRemovePet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRemovePetActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Hobo Std", 0, 24)); // NOI18N
        jLabel4.setText("Pet settings");

        tablePets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "type", "variant", "name", "hunger", "energy", "fun", "hygiene", "age", "money", "image", "owner"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablePets);

        texHunger.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel5.setText("Energy");

        jLabel6.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel6.setText("Fun");

        jLabel7.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel7.setText("Hunger");

        texFun.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        texEnergy.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        texHygiene.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel8.setText("Age");

        jLabel9.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel9.setText("Money");

        jLabel10.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel10.setText("Hygiene");

        texMoney.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        texAge.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        texAge.setEnabled(false);

        butListPetsItem.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        butListPetsItem.setText("List Pet's items");
        butListPetsItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butListPetsItemActionPerformed(evt);
            }
        });

        butBack.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        butBack.setText("Back");
        butBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butBackActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel11.setText("Owner");

        texOwner.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        texOwner.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel12.setText("Image");

        texImage.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        butListPetsJobs.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        butListPetsJobs.setText("List Pet's jobs");
        butListPetsJobs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butListPetsJobsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(texEnergy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                    .addComponent(texFun)
                                    .addComponent(texHunger)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(texType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                    .addComponent(texVariant, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(texName))
                                .addGap(50, 50, 50)
                                .addComponent(butUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(butRemovePet, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)
                                .addComponent(butBack, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(butListPetsItem)
                                .addGap(42, 42, 42)
                                .addComponent(butListPetsJobs))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(29, 29, 29)
                                    .addComponent(texImage, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel8)
                                                .addComponent(jLabel9)
                                                .addComponent(jLabel10))
                                            .addGap(20, 20, 20))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel11)
                                            .addGap(19, 19, 19)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(texOwner)
                                        .addComponent(texAge, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                        .addComponent(texHygiene)
                                        .addComponent(texMoney)))))
                        .addGap(0, 131, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butListPetsItem)
                    .addComponent(butListPetsJobs))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(texType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(texVariant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(texName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(texHunger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(texEnergy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(texFun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(texHygiene, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(texAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(texMoney, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(texImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(texOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butUpdate)
                    .addComponent(butRemovePet)
                    .addComponent(butBack))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myInit(){
        
        listPets();
        
        
        tablePets.addMouseListener(new MouseAdapter(){
            
            public void mouseClicked(MouseEvent e){
                DefaultTableModel model = (DefaultTableModel) tablePets.getModel();
                int i = tablePets.getSelectedRow();

                
                texType.setText(model.getValueAt(i, 0).toString());
                texVariant.setText(model.getValueAt(i, 1).toString());
                texName.setText(model.getValueAt(i, 2).toString());
                texHunger.setText(model.getValueAt(i, 3).toString());
                texEnergy.setText(model.getValueAt(i, 4).toString());
                texFun.setText(model.getValueAt(i, 5).toString());
                texHygiene.setText(model.getValueAt(i, 6).toString());
                texAge.setText(model.getValueAt(i, 7).toString());
                texMoney.setText(model.getValueAt(i, 8).toString());
                texImage.setText(model.getValueAt(i, 9).toString());
                texOwner.setText(model.getValueAt(i, 10).toString());
        
            }
        });
    }
    
    private void listPets(){
        pets = RaiseMeUp.listPets();        
        DefaultTableModel model = (DefaultTableModel) tablePets.getModel();
        model.setRowCount(0);
        
        for (Map.Entry<Integer, Pet> i : pets.entrySet()){
            System.out.println(i.getValue().getName());
            model.addRow(new Object[]{i.getValue().getType(), i.getValue().getVariant(), i.getValue().getName(),
                i.getValue().getHunger(),i.getValue().getEnergy(),i.getValue().getFun(),i.getValue().getHygiene(),
                i.getValue().getAge(), i.getValue().getMoney(), i.getValue().getImage(), i.getValue().getOwner()});
            /*
            for (Map.Entry<Item, Integer> item : i.getValue().getOwneditems().entrySet()){
                if (item.getKey() instanceof Food){
                    System.out.println(((Food)item.getKey()).getName());
                } else {
                    System.out.println(((Upgrade)item.getKey()).getName());
                }
                
            }*/
        }
    }
    
    private void clearTextFields(){
        texType.setText("");
        texVariant.setText("");
        texName.setText("");
        texHunger.setText("");
        texEnergy.setText("");
        texFun.setText("");
        texHygiene.setText("");
        texAge.setText("");
        texMoney.setText("");
        texImage.setText("");
        texOwner.setText("");
    }
    
    private void butBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butBackActionPerformed
        RaiseMeUp.setAdminWindow(new AdminWindow());
        this.setVisible(false);
        RaiseMeUp.getAdminWindow().setVisible(true);
    }//GEN-LAST:event_butBackActionPerformed

    private void butRemovePetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRemovePetActionPerformed
        DefaultTableModel model = (DefaultTableModel) tablePets.getModel();
        int i = tablePets.getSelectedRow();
        
        if (i >= 0){
            PetBuilder ub = new PetBuilder().setName(model.getValueAt(i, 2).toString()).setOwner(Integer.parseInt(model.getValueAt(i, 9).toString()));
            RaiseMeUp.removePet(ub.createPet());
            model.removeRow(i);
        }
        
        clearTextFields();
        System.out.println("i = " + i);
    }//GEN-LAST:event_butRemovePetActionPerformed

    private void butListPetsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butListPetsItemActionPerformed

        for (Map.Entry<Integer, Pet> pet : pets.entrySet()){
            System.out.println(pet.getValue().getName() + "  ÉS  " + texName.getText());
            System.out.println(pet.getValue().getOwner()+ "  ÉS  " + texOwner.getText());
            if (pet.getValue().getName().toString().equals(texName.getText().toString()) && pet.getValue().getOwner() == Integer.parseInt(texOwner.getText())){
                //new AdminPetsItems(pet.getValue());
                System.out.println("YES");
                RaiseMeUp.setAdminPetsItems(new AdminPetsItems(pet.getValue()));
                this.setVisible(false);
                RaiseMeUp.getAdminPetsItems().setVisible(true);
                break;
            }
        }
        
    }//GEN-LAST:event_butListPetsItemActionPerformed

    private void butUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUpdateActionPerformed
        DefaultTableModel model = (DefaultTableModel) tablePets.getModel();
        int i = tablePets.getSelectedRow();
        Pet p = new Pet();
        
        //UPDATE Pet SET type = ?, variant = ?, hunger = ?, energy = ?, fun = ?, hygiene = ?, age = ?, money = ?, image = ? WHERE name = ? AND userid = ?";
        if (i >= 0){
            PetBuilder pb = new PetBuilder();
            p = pb.createPet();
            p.setName(texName.getText());
            p.setHunger(Integer.parseInt(texHunger.getText()));
            p.setEnergy(Integer.parseInt(texEnergy.getText()));
            p.setFun(Integer.parseInt(texFun.getText()));
            p.setHygiene(Integer.parseInt(texHygiene.getText()));
            p.setMoney(Integer.parseInt(texMoney.getText()));
            p.setImage(texImage.getText());
            p.setOwner(Integer.parseInt(texOwner.getText()));
            RaiseMeUp.updatePet(p);
            
            model.setValueAt(texHunger.getText(), i, 3);
            model.setValueAt(texEnergy.getText(), i, 4);
            model.setValueAt(texFun.getText(), i, 5);
            model.setValueAt(texHygiene.getText(), i, 6);
            model.setValueAt(texMoney.getText(), i, 8);
            model.setValueAt(texImage.getText(), i, 9);
        }
        clearTextFields();
    }//GEN-LAST:event_butUpdateActionPerformed

    private void butListPetsJobsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butListPetsJobsActionPerformed
        for (Map.Entry<Integer, Pet> pet : pets.entrySet()){
            //System.out.println(pet.getValue().getName() + "  ÉS  " + texName.getText());
            //System.out.println(pet.getValue().getOwner()+ "  ÉS  " + texOwner.getText());
            if (pet.getValue().getName().toString().equals(texName.getText().toString()) && pet.getValue().getOwner() == Integer.parseInt(texOwner.getText())){
                //new AdminPetsItems(pet.getValue());
                //System.out.println("YES");
                RaiseMeUp.setAdminPetsJobs(new AdminPetsJobs(pet.getValue()));
                this.setVisible(false);
                RaiseMeUp.getAdminPetsJobs().setVisible(true);
                break;
            }
        }
    }//GEN-LAST:event_butListPetsJobsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPets().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butBack;
    private javax.swing.JButton butListPetsItem;
    private javax.swing.JButton butListPetsJobs;
    private javax.swing.JButton butRemovePet;
    private javax.swing.JButton butUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablePets;
    private javax.swing.JTextField texAge;
    private javax.swing.JTextField texEnergy;
    private javax.swing.JTextField texFun;
    private javax.swing.JTextField texHunger;
    private javax.swing.JTextField texHygiene;
    private javax.swing.JTextField texImage;
    private javax.swing.JTextField texMoney;
    private javax.swing.JTextField texName;
    private javax.swing.JTextField texOwner;
    private javax.swing.JTextField texType;
    private javax.swing.JTextField texVariant;
    // End of variables declaration//GEN-END:variables
}
