/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package raisemeup.view;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import raisemeup.control.RaiseMeUp;
import raisemeup.model.beans.Upgrade;

/**
 *
 * @author lekogabor
 */
public class AdminUpgrades extends javax.swing.JFrame {

    
    private Map<Integer, Upgrade> upgrades = new HashMap<Integer, Upgrade>();
    /**
     * Creates new form AdminUpgrades
     */
    public AdminUpgrades() {
        initComponents();
        myInit();
    }
    
    private void myInit(){
        listUpgrades();
        
        tableUpgrades.addMouseListener(new MouseAdapter(){
            
            public void mouseClicked(MouseEvent e){
                DefaultTableModel model = (DefaultTableModel) tableUpgrades.getModel();
                int i = tableUpgrades.getSelectedRow();

                texUpgradeName.setText(model.getValueAt(i, 1).toString());
                texUpgradePrice.setText(model.getValueAt(i, 2).toString());
                texProperty.setText(model.getValueAt(i, 3).toString());
                texSpecies.setText(model.getValueAt(i, 4).toString());
                texValue.setText(model.getValueAt(i, 5).toString());
                texUpgradeImage.setText(model.getValueAt(i, 6).toString());
            }
        });
    }

    private void listUpgrades(){
        upgrades = RaiseMeUp.listUpgrades();        
        DefaultTableModel model = (DefaultTableModel) tableUpgrades.getModel();
        model.setRowCount(0);
        
        for (Map.Entry<Integer, Upgrade> u : upgrades.entrySet()){
            //System.out.println(f.getValue().getName());
            model.addRow(new Object[]{u.getValue().getId(), u.getValue().getName(), u.getValue().getPrice(), u.getValue().getProperty(),
                                    u.getValue().getSpecies(), u.getValue().getValue(), u.getValue().getImage()});
        }
    }
    
    private void clearTextFields(){
        texUpgradeName.setText("");
        texUpgradePrice.setText("");
        texProperty.setText("");
        texSpecies.setText("");
        texValue.setText("");
        texUpgradeImage.setText("");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUpgrades = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        texUpgradeImage = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        texValue = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        texSpecies = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        texProperty = new javax.swing.JTextField();
        texUpgradePrice = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        texUpgradeName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        butAdd = new javax.swing.JButton();
        butRemove = new javax.swing.JButton();
        butUpdate = new javax.swing.JButton();
        butBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Hobo Std", 0, 24)); // NOI18N
        jLabel1.setText("Upgrade");

        tableUpgrades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "upgradeID", "name", "price", "property", "species", "value", "image"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableUpgrades);

        jLabel16.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel16.setText("Image");

        texUpgradeImage.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel15.setText("Value");

        texValue.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel14.setText("Species");

        texSpecies.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel13.setText("Property");

        texProperty.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        texUpgradePrice.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel12.setText("Price");

        texUpgradeName.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel11.setText("Name");

        butAdd.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        butAdd.setText("Add");
        butAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddActionPerformed(evt);
            }
        });

        butRemove.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        butRemove.setText("Remove");
        butRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRemoveActionPerformed(evt);
            }
        });

        butUpdate.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        butUpdate.setText("Update");
        butUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butUpdateActionPerformed(evt);
            }
        });

        butBack.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        butBack.setText("Back");
        butBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(texValue, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(texSpecies, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(texProperty, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(texUpgradePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(46, 46, 46)
                                        .addComponent(texUpgradeName, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(texUpgradeImage, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(butAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(13, 13, 13)
                                .addComponent(butRemove)
                                .addGap(66, 66, 66)
                                .addComponent(butUpdate)
                                .addGap(61, 61, 61)
                                .addComponent(butBack, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(texUpgradeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(texUpgradePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(texProperty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(texSpecies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(texValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(texUpgradeImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butAdd)
                    .addComponent(butRemove)
                    .addComponent(butUpdate)
                    .addComponent(butBack))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butBackActionPerformed
        RaiseMeUp.setAdminWindow(new AdminWindow());
        this.setVisible(false);
        RaiseMeUp.getAdminWindow().setVisible(true);
    }//GEN-LAST:event_butBackActionPerformed

    private void butAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddActionPerformed
        Upgrade u = new Upgrade();
        u.setName(texUpgradeName.getText());
        u.setPrice(Integer.parseInt(texUpgradePrice.getText()));
        u.setProperty(texProperty.getText());
        u.setSpecies(texSpecies.getText());
        u.setValue(Integer.parseInt(texValue.getText()));
        u.setImage(texUpgradeImage.getText());
        
        RaiseMeUp.newUpgrade(u);
        clearTextFields();
        listUpgrades();
    }//GEN-LAST:event_butAddActionPerformed

    private void butUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUpdateActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableUpgrades.getModel();
        int i = tableUpgrades.getSelectedRow();

        Upgrade u = new Upgrade();
        
        u.setId(Integer.parseInt(model.getValueAt(i, 0).toString()));
        u.setName(texUpgradeName.getText());
        u.setPrice(Integer.parseInt(texUpgradePrice.getText()));
        u.setProperty(texProperty.getText());
        u.setSpecies(texSpecies.getText());
        u.setValue(Integer.parseInt(texValue.getText()));
        u.setImage(texUpgradeImage.getText());
        
        RaiseMeUp.updateUpgrade(u);
        clearTextFields();
        listUpgrades();
    }//GEN-LAST:event_butUpdateActionPerformed

    private void butRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRemoveActionPerformed
        Upgrade u = new Upgrade();
        u.setName(texUpgradeName.getText());
        RaiseMeUp.removeUpgrade(u);
        clearTextFields();
        listUpgrades();
    }//GEN-LAST:event_butRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminUpgrades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminUpgrades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminUpgrades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminUpgrades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminUpgrades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAdd;
    private javax.swing.JButton butBack;
    private javax.swing.JButton butRemove;
    private javax.swing.JButton butUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableUpgrades;
    private javax.swing.JTextField texProperty;
    private javax.swing.JTextField texSpecies;
    private javax.swing.JTextField texUpgradeImage;
    private javax.swing.JTextField texUpgradeName;
    private javax.swing.JTextField texUpgradePrice;
    private javax.swing.JTextField texValue;
    // End of variables declaration//GEN-END:variables
}
