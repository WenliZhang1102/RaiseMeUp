/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package raisemeup.view;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import raisemeup.control.RaiseMeUp;
import raisemeup.model.beans.Item;
import raisemeup.model.beans.User;
import raisemeup.model.beans.UserBuilder;


/**
 *
 * @author lekogabor
 */
public class AdminUsers extends javax.swing.JFrame {

    /**
     * Creates new form AdminUsers
     */
    public AdminUsers() {
        initComponents();
        myInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableUsers = new javax.swing.JTable();
        labName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        texName = new javax.swing.JTextField();
        texEmail = new javax.swing.JTextField();
        texPassword = new javax.swing.JTextField();
        butUpdate = new javax.swing.JButton();
        butRemoveUser = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        butBack = new javax.swing.JButton();
        butList = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "username", "password", "email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableUsers);

        labName.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        labName.setText("Username");

        jLabel2.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel2.setText("Password");

        jLabel3.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        jLabel3.setText("Email");

        texName.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        texName.setEnabled(false);

        texEmail.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        texPassword.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N

        butUpdate.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        butUpdate.setText("Update");
        butUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butUpdateActionPerformed(evt);
            }
        });

        butRemoveUser.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        butRemoveUser.setText("Remove");
        butRemoveUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRemoveUserActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Hobo Std", 0, 18)); // NOI18N
        jLabel4.setText("User settings");

        butBack.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        butBack.setText("Back");
        butBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butBackActionPerformed(evt);
            }
        });

        butList.setFont(new java.awt.Font("Hobo Std", 0, 12)); // NOI18N
        butList.setText("List Users");
        butList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addContainerGap(30, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(labName))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(texName)
                                    .addComponent(texEmail, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(texPassword, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(293, 293, 293))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addComponent(butUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(butRemoveUser, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(butBack, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(butList)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(butList)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labName)
                    .addComponent(texName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(texPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(texEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butUpdate)
                    .addComponent(butRemoveUser)
                    .addComponent(butBack))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myInit(){
        
        listUsers();
        
        tableUsers.addMouseListener(new MouseAdapter(){
            
            public void mouseClicked(MouseEvent e){
                DefaultTableModel model = (DefaultTableModel) tableUsers.getModel();
                int i = tableUsers.getSelectedRow();

                texName.setText(model.getValueAt(i, 0).toString());
                texPassword.setText(model.getValueAt(i, 1).toString());
                texEmail.setText(model.getValueAt(i, 2).toString());
        
            }
        });
    }
    
    private void listUsers(){
        Map<Integer,User> users = new HashMap<Integer, User>();
        
        users = RaiseMeUp.listUsers();
        DefaultTableModel model = (DefaultTableModel) tableUsers.getModel();
        model.setRowCount(0);
        
        for (Map.Entry<Integer, User> i : users.entrySet()){
            //System.out.println(i.getValue().getUsername());
            model.addRow(new Object[]{i.getValue().getUsername(), i.getValue().getPassword(), i.getValue().getEmail()});
        }
    }
  
    private void clearTextFields(){
        texName.setText("");
        texPassword.setText("");
        texEmail.setText("");
    }
    
    private void butBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butBackActionPerformed
        RaiseMeUp.setAdminWindow(new AdminWindow());
        this.setVisible(false);
        RaiseMeUp.getAdminWindow().setVisible(true);
    }//GEN-LAST:event_butBackActionPerformed

    private void butRemoveUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRemoveUserActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableUsers.getModel();
        int i = tableUsers.getSelectedRow();
        
        if (i >= 0){
            UserBuilder ub = new UserBuilder().setUsername(model.getValueAt(i, 0).toString());
            RaiseMeUp.removeUser(ub.createUser());
            model.removeRow(i);
        }
        clearTextFields();
        listUsers();
        System.out.println("i = " + i);
    }//GEN-LAST:event_butRemoveUserActionPerformed

    private void butUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUpdateActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableUsers.getModel();
        int i = tableUsers.getSelectedRow();
        
        
        if (i >= 0){
            UserBuilder ub = new UserBuilder().setUsername(texName.getText()).
                    setPassword(texPassword.getText()).
                    setEmail(texEmail.getText());
            RaiseMeUp.updateUser(ub.createUser());
            
            model.setValueAt(texName.getText(), i, 0);
            model.setValueAt(texPassword.getText(), i, 1);
            model.setValueAt(texEmail.getText(), i, 2);
        }
        clearTextFields();
    }//GEN-LAST:event_butUpdateActionPerformed

    private void butListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butListActionPerformed
        Map<Integer,User> users = new HashMap<Integer, User>();
        
        users = RaiseMeUp.listUsers();
        DefaultTableModel model = (DefaultTableModel) tableUsers.getModel();
        model.setRowCount(0);
        
        for (Map.Entry<Integer, User> i : users.entrySet()){
            //System.out.println(i.getValue().getUsername());
            model.addRow(new Object[]{i.getValue().getUsername(), i.getValue().getPassword(), i.getValue().getEmail()});
        }
    }//GEN-LAST:event_butListActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminUsers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butBack;
    private javax.swing.JButton butList;
    private javax.swing.JButton butRemoveUser;
    private javax.swing.JButton butUpdate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labName;
    private javax.swing.JTable tableUsers;
    private javax.swing.JTextField texEmail;
    private javax.swing.JTextField texName;
    private javax.swing.JTextField texPassword;
    // End of variables declaration//GEN-END:variables
}
